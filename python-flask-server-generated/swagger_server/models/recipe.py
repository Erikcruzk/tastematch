# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Recipe(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, ingredients: List[str]=None, image: str=None):  # noqa: E501
        """Recipe - a model defined in Swagger

        :param id: The id of this Recipe.  # noqa: E501
        :type id: str
        :param ingredients: The ingredients of this Recipe.  # noqa: E501
        :type ingredients: List[str]
        :param image: The image of this Recipe.  # noqa: E501
        :type image: str
        """
        self.swagger_types = {
            'id': str,
            'ingredients': List[str],
            'image': str
        }

        self.attribute_map = {
            'id': 'id',
            'ingredients': 'ingredients',
            'image': 'image'
        }
        self._id = id
        self._ingredients = ingredients
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'Recipe':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Recipe of this Recipe.  # noqa: E501
        :rtype: Recipe
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Recipe.


        :return: The id of this Recipe.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Recipe.


        :param id: The id of this Recipe.
        :type id: str
        """

        self._id = id

    @property
    def ingredients(self) -> List[str]:
        """Gets the ingredients of this Recipe.


        :return: The ingredients of this Recipe.
        :rtype: List[str]
        """
        return self._ingredients

    @ingredients.setter
    def ingredients(self, ingredients: List[str]):
        """Sets the ingredients of this Recipe.


        :param ingredients: The ingredients of this Recipe.
        :type ingredients: List[str]
        """

        self._ingredients = ingredients

    @property
    def image(self) -> str:
        """Gets the image of this Recipe.


        :return: The image of this Recipe.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this Recipe.


        :param image: The image of this Recipe.
        :type image: str
        """

        self._image = image
